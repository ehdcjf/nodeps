const fs = require('fs');

const code = Buffer.from(
	'',
	'base64'
);

const fd_write = (fd, iovs, iovs_len, nwritten) => {
	fd = fd >>> 0;
	iovs = iovs >>> 0;
	iovs_len = iovs_len >>> 0;
	nwritten = nwritten >>> 0;
	const x = new Uint32Array(wasm_memory.buffer, iovs, iovs_len);
	const [offset, length] = x;
	fs.writeSync(fd, new Uint32Array(wasm_memory.buffer), offset, length);
};

const fd_read = (fd, iovs, iovs_len, nread) => {
	fd = fd >>> 0;
	iovs = iovs >>> 0;
	iovs_len = iovs_len >>> 0;
	nread = nread >>> 0;
	const x = new Uint32Array(wasm_memory.buffer, iovs, iovs_len);
	const [offset, length] = x;
	return fs.readSync(fd, new Uint32Array(wasm_memory.buffer), offset, length);
};

const path_open = (dirfd, dirflags, path, path_len, oflags, fs_rights_base, fs_rights_inheriting, fs_flags, fd) => {
	dirfd = dirfd >>> 0;
	dirflags = dirflags >>> 0;
	path = path >>> 0;
	path_len = path_len >>> 0;
	fs_rights_base = BigInt.asUintN(64, fs_rights_base);
	fs_rights_inheriting = BigInt.asUintN(64, fs_rights_inheriting);
	fd = fd >>> 0;
	console.log(dirfd);
	console.log(dirflags);
	console.log(path);
	console.log(path_len);
	console.log(oflags);
	console.log(fs_rights_base);
	console.log(fs_rights_inheriting);
	console.log(fs_flags);
	console.log(fd);
};

let wasm_memory;
WebAssembly.instantiate(code, {
	wasi_snapshot_preview1: {
		fd_write,
		args_sizes_get: (argc, argv_buf_size) => {
			argc = argc >>> 0;
			argv_buf_size = argv_buf_size >>> 0;
			console.log(argc);
			console.log(argv_buf_size);
			console.log('args_sizes_get');
		},
		args_get: () => {
			console.log('args_get');
		},
	},
	env: { abort: () => {} },
}).then((wasm) => {
	const { read, memory } = wasm.instance.exports;
	memory.grow(1000);
	wasm_memory = memory;
	read();
});
